---
description: Standards for Lagoon Docker Compose configuration
globs: docker-compose.yml, docker-compose.*.yml
---
# Lagoon Docker Compose Standards

Ensures proper Docker Compose configuration for Lagoon deployments, following best practices and Lagoon-specific requirements.

> Priority: high Â· Version: 1.1

## Applies To
- `docker-compose.yml`
- `docker-compose.*.yml`

## Trigger Conditions
- Filter `file_name` matching `^docker-compose(\.\w+)?\.yml$`

## Required Checks

- Add Lagoon labels to service definitions for proper Lagoon integration
- Use Docker Compose format version 3 or higher for compatibility with modern Docker features
- Use 'delegated' mount consistency for better performance on macOS development environments
- Define restart policy for services to ensure proper behavior during deployment

## Recommendations

## Lagoon Docker Compose Best Practices:

### Service Configuration
- Define service types via labels (e.g., `lagoon.type: nginx`)
- Use proper image naming conventions (e.g., `amazeeio/nginx-drupal:latest`)
- Set appropriate environment variables using Lagoon variables
- Define health checks for critical services
- Configure proper networking with Lagoon defaults
- Set resource constraints appropriate for each environment

### Volume Configuration
- Use named volumes for persistent data
- Configure appropriate volume mounts with correct permissions
- Use 'delegated' mount consistency for macOS performance
- Avoid mounting the entire codebase when possible

### Build Configuration
- Use build arguments appropriately
- Define proper Dockerfile paths
- Use multi-stage builds for smaller images

### Example Service Configuration:
```yaml
services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    labels:
      lagoon.type: nginx
      lagoon.persistent: /app/web/sites/default/files/
    volumes:
      - app:/app:delegated
    depends_on:
      - php
    environment:
      LAGOON_ROUTE: ${LAGOON_ROUTE:-http://project.docker.amazee.io}
```

## Validation

- CLI service should have proper build configuration for Lagoon compatibility
- Define service dependencies for proper startup order and container relationships
- Configure proper network settings for Lagoon compatibility and service communication
- Use Lagoon-provided MariaDB image for compatibility with Lagoon environment
- Use Lagoon environment variables with fallbacks for local development
